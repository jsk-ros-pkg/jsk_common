#!/usr/bin/env python

import roslib; roslib.load_manifest("parallel_util")
from parallel_util import *
from optparse import OptionParser
import os
import sys

def parse_options():
    parser = OptionParser()
    parser.add_option("-i", "--input", dest = "input",
                      default = os.path.join(os.environ["HOME"],
                                             ".cssh-clusters"),
                      help = """input cssh configuration file.
it defaults to ~/.cssh-clusters""")
    parser.add_option("-g", "--group", dest = "group",
                      help = "specify the group of the cssh cluster")
    parser.add_option("--timeout", dest = "timeout",
                      type = int,
                      default = None,
                      help = "specify timeout of ssh connection in sec")
    parser.add_option("-q", "--quiet", dest = "quiet",
                      action = "store_true",
                      default = False,
                      help = "run script in quiet mode")
    (options, args) = parser.parse_args()
    if not options.group:
        parser.print_help()
        sys.exit(1)
    return options

def main():
    options = parse_options()
    infos = cpuinfos(from_cssh_file = options.input,
                     cssh_group = options.group,
                     verbose = not options.quiet,
                     timeout = options.timeout)
    launchservices = ["--launchservice='%s*%s'" % (cpuinfo[0], host)
                      for host, cpuinfo in infos.items()]
    print " ".join(launchservices)
    sys.exit(0)
    
if __name__ == "__main__":
    main()
