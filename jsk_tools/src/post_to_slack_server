#!/usr/bin/env python

import argparse
import os

import slacker_cli

import rospy
from std_msgs.msg import String


class PostToSlackServer(object):

    def __init__(self, channel, as_user):
        token = rospy.get_param('~slack_token', None)
        if not token:
            token = os.environ.get('SLACK_TOKEN')

        if channel.startswith('#'):
            self.channel = channel
        elif channel.startswith('@'):
            to_user = channel[1:]
            im_id = slacker_cli.get_im_id(token, to_user)
            self.channel = im_id or channel

        self.as_user = as_user

        self.slacker = slacker_cli.Slacker(token)
        self.sub = rospy.Subscriber('~input/string', String, self.string_cb)

    def string_cb(self, msg):
        text = msg.data
        self.slacker.chat.post_message(self.channel, text, as_user=self.as_user)


if __name__ == '__main__':
    # @ mark is not supported in rosparam, so we use command line argument.
    parser = argparse.ArgumentParser()
    parser.add_argument('--channel', type=str, required=True,
                        help='Channel name (ex. @user, #random)')
    parser.add_argument('--as-user', action='store_true',
                        help='Post as user.')
    args = parser.parse_args(rospy.myargv()[1:])

    rospy.init_node('post_to_slack_server')
    PostToSlackServer(args.channel, args.as_user)
    rospy.spin()
